# This file was automatically generated by oml2-scaffold 2.10.0

defApplication('omehani:app:generator', 'generator') do |app|

  app.version(1, 0, 0)
  app.shortDescription = 'Example OML application'
  app.description = %{
This programs implements a simple sine wave generator with
the output measured by OML.

It is almost only generated by oml2-scaffold.
}
  app.path = "/usr/local/bin/generator"

  # Declare command-line arguments; generate Popt parser with
  #  oml2-scaffold --opts generator.rb
  app.defProperty('amplitude', 'Amplitude of produced signal', ?a,
        :type => :float, :impl => { :var_name => 'amplitude' })
  app.defProperty('frequency', 'Frequency of wave generated', ?f,
        :type => :float, :unit => 'hertz',
        :impl => { :var_name => 'frequency' })
  app.defProperty('samples', 'Number of samples to take. -1 ... forever', ?n,
        :type => :int32, :impl => { :var_name => 'samples' })
  app.defProperty('sample-interval', 'Time between consecutive measurements', ?i,
        :type => :float, :unit => 'second',
	:impl => { :var_name => 'sample_interval' })

  # Declare measurement points; generate OML injection helpers with
  #  oml2-scaffold --oml generator.rb
  app.defMeasurement("d_lin") do |m|
    m.defMetric('label', :string)
    m.defMetric('seq_no', :uint32)
  end

  app.defMeasurement("d_sin") do |m|
    m.defMetric('label', 'string')
    m.defMetric('phase', 'double')
    m.defMetric('value', 'double')
  end

end

# Local Variables:
# mode:ruby
# End:
# vim: ft=ruby:sw=2
