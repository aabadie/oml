#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1




configure: configure-stamp
configure-stamp:
	dh_testdir
	# Add here commands to configure the package.
	./configure --prefix /usr --localstatedir=/var/lib \
		--enable-doc --disable-doxygen-doc \
		--with-pgsql --with-pgsql-inc=/usr/include/postgresql/
	touch configure-stamp


build: build-stamp

build-stamp: configure-stamp 
	dh_testdir

	# Add here commands to compile the package.
	$(MAKE)
	#docbook-to-man debian/oml.sgml > oml.1

	touch $@

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp

	# Add here commands to clean up after the build process.
	-$(MAKE) clean

	dh_clean 

install: build
	dh_testdir
	dh_testroot
	dh_clean -k 
	dh_installdirs

	# Install the binaries into debian/tmp
	$(MAKE) DESTDIR=$(CURDIR)/debian/tmp install

	# Make directories for all debian packages
	mkdir -p $(CURDIR)/debian/oml2-server/usr/bin
	mkdir -p $(CURDIR)/debian/oml2-server/var/lib
	mkdir -p $(CURDIR)/debian/oml2-server/usr/share/oml2-server
	mkdir -p $(CURDIR)/debian/oml2-proxy-server/usr/bin
	mkdir -p $(CURDIR)/debian/oml2-proxycon/usr/bin
	mkdir -p $(CURDIR)/debian/liboml2-9/usr/lib
	mkdir -p $(CURDIR)/debian/liboml2-9/usr/share/liboml2
	mkdir -p $(CURDIR)/debian/liboml2-dev/usr/include
	mkdir -p $(CURDIR)/debian/liboml2-dev/usr/lib
	mkdir -p $(CURDIR)/debian/liboml2-dev/usr/bin
	mkdir -p $(CURDIR)/debian/liboml2-dev/usr/share/liboml2-dev
	mkdir -p $(CURDIR)/debian/liboml2-dev/usr/share/man/man1
	mkdir -p $(CURDIR)/debian/libocomm1/usr/lib
	mkdir -p $(CURDIR)/debian/libocomm-dev/usr/lib
	mkdir -p $(CURDIR)/debian/libocomm-dev/usr/include

	# Build the oml2-server package
	mv $(CURDIR)/debian/tmp/usr/bin/oml2-server $(CURDIR)/debian/oml2-server/usr/bin
	mv $(CURDIR)/debian/tmp/var/lib/oml2 $(CURDIR)/debian/oml2-server/var/lib/oml2
	mv $(CURDIR)/debian/tmp/usr/share/oml2/oml2-server-hook.sh $(CURDIR)/debian/oml2-server/usr/share/oml2-server/
	chmod a+x $(CURDIR)/debian/oml2-server/usr/share/oml2-server/oml2-server-hook.sh

	# Build the oml2-proxy-server package
	mv $(CURDIR)/debian/tmp/usr/bin/oml2-proxy-server $(CURDIR)/debian/oml2-proxy-server/usr/bin

	# Build the oml2-proxycon package
	mv $(CURDIR)/debian/tmp/usr/bin/oml2-proxycon $(CURDIR)/debian/oml2-proxycon/usr/bin

	# Build the liboml2-dev package
	mv $(CURDIR)/debian/tmp/usr/include/oml2 $(CURDIR)/debian/liboml2-dev/usr/include/
	mv $(CURDIR)/debian/tmp/usr/bin $(CURDIR)/debian/liboml2-dev/usr
	mv $(CURDIR)/debian/tmp/usr/lib/liboml2.so $(CURDIR)/debian/liboml2-dev/usr/lib/
	mv $(CURDIR)/debian/tmp/usr/share/oml2/liboml2/ $(CURDIR)/debian/liboml2-dev/usr/share/liboml2-dev/
	mv $(CURDIR)/debian/tmp/usr/share/man/man1/oml2?scaffold.1 $(CURDIR)/debian/liboml2-dev/usr/share/man/man1/

	# Build the liboml2-9 package
	mv $(CURDIR)/debian/tmp/usr/lib/liboml2.so.* $(CURDIR)/debian/liboml2-9/usr/lib/
	mv $(CURDIR)/debian/tmp/usr/share/oml2/liboml2-conf/ $(CURDIR)/debian/liboml2-9/usr/share/liboml2/

	# Build the libocomm-dev package
	mv $(CURDIR)/debian/tmp/usr/include/ocomm $(CURDIR)/debian/libocomm-dev/usr/include/
	mv $(CURDIR)/debian/tmp/usr/lib/libocomm.so $(CURDIR)/debian/libocomm-dev/usr/lib/

	# Build the libocomm1 package
	mv $(CURDIR)/debian/tmp/usr/lib/libocomm.so.* $(CURDIR)/debian/libocomm1/usr/lib/


# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs 
	dh_installdocs
	dh_installexamples
#	dh_install
#	dh_installmenu
#	dh_installdebconf	
	dh_installlogrotate
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
#	dh_python
	dh_installinit
#	dh_installcron
#	dh_installinfo
	dh_installman
	dh_link
	dh_strip
	dh_compress
	dh_fixperms
#	dh_perl
	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install configure
