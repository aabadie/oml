oml2-server(1)
==============

NAME
----
oml2-server - OML2 server daemon

SYNOPSIS
--------
[verse]
*oml2-server* [--version | -v] [-d loglevel | --debug-level=loglevel]
	  [-l port | --listen=port] [--data-dir] [--logfile=file]
	  [-? | --help]

DESCRIPTION
-----------

*oml2-server* (OML2 Server) is the daemon program for OML.  It
collects measurements from client applications and stores them in a
measurement database.

*oml2-server* listens for connections from clients.  It is normally
started at boot as a system service.  Each client declares which
experiment it belongs to (using the --oml-exp-id option of the liboml2
client library), and then sends a stream of measurement packets.  The
measurements for each client are stored in the experiment database
belonging to the client's experiment.

If the client declares that it belongs to experiment EXP, then
*oml2-server* will look for an existing experiment database named
EXP.sq3 in the data directory (see the --data-dir option).  Currently
*oml2-server* uses SQLite3 as the database backend, hence the .sq3
file name extension. If the database exists already, *oml2-server*
will open it and append new measurements from the client to it.  If
EXP.sq3 does not exist, *oml2-server* will attempt to create the
measurement database, initialize it for use, and then append new
measurements from the client to it.  Measurement streams from
subsequent clients belonging to the same experiment EXP will also be
written to EXP.sq3.

OPTIONS
-------
-l port::
--listen=port::
	Listen for measurement client connections on the given
	port. The default port is 3003.

--data-dir=directory::
	Store measurement databases for all experiments in the
	specified directory. The default directory is the current
	working directory.

--uid=UID, --gid=GID::
	Try to change the server's uid and gid before starting to serve
	clients.  OML only needs access to a single directory in which it
	has the right to create the SQLite3 experiment database files,
	plus the right to open and write to its log file (creating it if
	necessary).  The '--uid' and '--gid' options allow the system
	administrator to run *oml2-server* under a non-privileged account,
	thereby lessening its potential as a security risk.  If only
	'--uid' is given, the gid will be set to the primary group id for
	the given user. '--uid' and '--gid' accept user and group names as
	arguments; numeric user and group ids are not supported.

-d::
--debug-level=level::
	Set the verbosity of log output to level. The level should be
    an integer from 1 to 4 (1=ERROR, 2=WARNING, 3=INFO, 4=DEBUG).
	The default log verbosity is 3, INFO.

--logfile=file::
		Write log messages to file.

-v::
--version::
		Print the version number of *oml2-server*.

--usage::
		Print a brief usage message.

BUGS
----

Reporting Bugs
~~~~~~~~~~~~~~

To report a bug, please email our support contacts listed here:
http://omf.mytestbed.net/wiki/oml/FAQ_and_Support

Known Bugs
~~~~~~~~~~

For outstanding known bugs, please consult
http://omf.mytestbed.net/projects/oml/issues


SECURITY CONSIDERATIONS
-----------------------

*oml2-server* does not use any authentication, and should thus be
considered insecure.  It is intended to be deployed behind firewalls
on a dedicated testbed network.  It should not be run as a daemon on
an open network.  Future versions of OML may be re-designed to be
suitable for use in insecure environments.

SEE ALSO
--------
Manual Pages
~~~~~~~~~~~~
linkoml:oml2-proxy-server[1], linkoml:liboml2[1], linkoml:liboml2[3,api]

OML User Manual
~~~~~~~~~~~~~~~
http://omf.mytestbed.net/wiki/oml/Documentation

SQLite3
~~~~~~~
http://www.sqlite.org
